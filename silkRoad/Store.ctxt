#BlueJ class context
comment0.target=Store
comment0.text=\r\n\ Abstract\ base\ class\ representing\ a\ store\ on\ the\ silk\ road\ route.\r\n\ This\ class\ implements\ the\ common\ behavior\ for\ all\ store\ types.\r\n\ \r\n\ @author\ Exael74\ (Github\ User\ for\ Stiven\ Pardo)\r\n\ @version\ 5.0\r\n
comment1.params=position\ tenges\ color
comment1.target=Store(int,\ int,\ java.lang.String)
comment1.text=\r\n\ Constructor\ for\ Store\ class\ objects.\r\n\ \r\n\ @param\ position\ store\ position\ on\ the\ route\r\n\ @param\ tenges\ amount\ of\ coins\ the\ store\ starts\ with\r\n\ @param\ color\ store\ color\r\n
comment10.params=
comment10.target=int\ getTenges()
comment10.text=\r\n\ Returns\ the\ quantity\ of\ tenges\ in\ the\ store.\r\n\ \r\n\ @return\ quantity\ of\ tenges\r\n
comment11.params=tenges
comment11.target=void\ setTenges(int)
comment11.text=\r\n\ Sets\ the\ quantity\ of\ tenges\ in\ the\ store.\r\n\ \r\n\ @param\ tenges\ new\ quantity\ of\ tenges\r\n
comment12.params=
comment12.target=int\ getInitialTenges()
comment12.text=\r\n\ Returns\ the\ initial\ quantity\ of\ tenges\ in\ the\ store.\r\n\ \r\n\ @return\ initial\ quantity\ of\ tenges\r\n
comment13.params=
comment13.target=java.lang.String\ getColor()
comment13.text=\r\n\ Returns\ the\ store's\ color.\r\n\ \r\n\ @return\ store\ color\r\n
comment14.params=
comment14.target=void\ resupply()
comment14.text=\r\n\ Resupplies\ the\ store\ with\ its\ initial\ tenges.\r\n
comment15.params=
comment15.target=int\ getEmptyCount()
comment15.text=\r\n\ Returns\ the\ number\ of\ times\ the\ store\ has\ been\ emptied.\r\n\ \r\n\ @return\ counter\ of\ times\ empty\r\n
comment16.params=
comment16.target=void\ resetEmptyCount()
comment16.text=\r\n\ Resets\ the\ counter\ of\ times\ the\ store\ has\ been\ emptied.\r\n
comment17.params=
comment17.target=boolean\ isEmpty()
comment17.text=\r\n\ Checks\ if\ the\ store\ is\ empty.\r\n\ \r\n\ @return\ true\ if\ the\ store\ is\ empty\ (no\ tenges)\r\n
comment18.params=
comment18.target=boolean\ isVisible()
comment18.text=\r\n\ Indicates\ if\ the\ store\ is\ currently\ visible.\r\n\ \r\n\ @return\ true\ if\ visible,\ false\ otherwise\r\n
comment2.params=
comment2.target=java.lang.String\ getType()
comment2.text=\r\n\ Returns\ the\ store\ type.\r\n\ Must\ be\ implemented\ by\ subclasses.\r\n\ \r\n\ @return\ store\ type\ string\r\n
comment3.params=robot
comment3.target=boolean\ canRobotTakeTenges(Robot)
comment3.text=\r\n\ Checks\ if\ a\ robot\ can\ take\ tenges\ from\ this\ store.\r\n\ Can\ be\ overridden\ by\ subclasses\ to\ implement\ different\ access\ rules.\r\n\ \r\n\ @param\ robot\ the\ robot\ attempting\ to\ take\ tenges\r\n\ @return\ true\ if\ the\ robot\ can\ take\ tenges,\ false\ otherwise\r\n
comment4.params=
comment4.target=void\ makeVisible()
comment4.text=\r\n\ Makes\ the\ store\ visible\ on\ the\ canvas.\r\n
comment5.params=
comment5.target=void\ makeInvisible()
comment5.text=\r\n\ Makes\ the\ store\ invisible\ on\ the\ canvas.\r\n
comment6.params=x\ y
comment6.target=void\ updateCanvasPosition(int,\ int)
comment6.text=\r\n\ Updates\ the\ store's\ position\ on\ the\ canvas.\r\n\ \r\n\ @param\ x\ x\ coordinate\ on\ the\ canvas\r\n\ @param\ y\ y\ coordinate\ on\ the\ canvas\r\n
comment7.params=visible
comment7.target=void\ setVisible(boolean)
comment7.text=\r\n\ Sets\ the\ store's\ visibility\ state.\r\n\ \r\n\ @param\ visible\ true\ to\ make\ visible,\ false\ for\ invisible\r\n
comment8.params=
comment8.target=int\ getPosition()
comment8.text=\r\n\ Returns\ the\ store's\ position.\r\n\ \r\n\ @return\ position\ on\ the\ route\r\n
comment9.params=position
comment9.target=void\ setPosition(int)
comment9.text=\r\n\ Sets\ the\ store's\ position.\r\n\ Used\ by\ AutonomousStore\ to\ change\ its\ position.\r\n\ \r\n\ @param\ position\ new\ position\ on\ the\ route\r\n
numComments=19
