#BlueJ class context
comment0.target=SilkRoadContestTest
comment0.text=\r\n\ Test\ class\ for\ SilkRoadContest.\r\n\ Contains\ tests\ to\ verify\ the\ correct\ functioning\ of\ the\ solve\ and\ simulate\ methods.\r\n\ @author\ Exael74\ (Github\ User\ for\ Stiven\ Pardo)\r\n
comment1.params=
comment1.target=void\ configurarSalidaConsola()
comment1.text=\r\n\ Sets\ up\ console\ output\ redirection\ before\ each\ test.\r\n
comment10.params=
comment10.target=void\ accordingPshouldNotConsiderarTiendasConGananciasNegativas()
comment10.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ does\ not\ consider\ stores\ with\ negative\ profits\r\n\ (when\ distance\ is\ greater\ than\ tenges).\r\n
comment11.params=
comment11.target=void\ accordingPshouldNotProducirResultadosIncorrectosConPosicionesInvalidas()
comment11.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ does\ not\ produce\ incorrect\ results\ with\ invalid\ positions.\r\n
comment12.params=
comment12.target=void\ accordingPshouldNotFallarConValoresExtremos()
comment12.text=\r\n\ Test\ that\ verifies\ that\ the\ simulate\ method\ does\ not\ fail\ with\ extreme\ values.\r\n\ NOTE\:\ Completely\ rewritten\ to\ be\ simpler.\r\n
comment13.params=
comment13.target=void\ accordingPshouldNotCalcularIncorrectamenteCuandoHayMultiplesDias()
comment13.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ does\ not\ calculate\ incorrectly\ when\ there\ are\ multiple\ days.\r\n
comment14.params=
comment14.target=void\ accordingPshouldNotProcesarDiasFaltantesOConFormatoIncorrecto()
comment14.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ does\ not\ process\ missing\ days\ or\ incorrectly\ formatted\ ones.\r\n
comment15.params=diasActuales\ nuevoDia
comment15.target=int[][]\ agregarDia(int[][],\ int[])
comment15.text=\r\n\ Helper\ method\ to\ add\ a\ day\ to\ the\ days\ array.\r\n\ \r\n\ @param\ diasActuales\ current\ days\ array\r\n\ @param\ nuevoDia\ new\ day\ to\ add\r\n\ @return\ new\ array\ with\ added\ day\r\n
comment2.params=
comment2.target=void\ restaurarSalidaConsola()
comment2.text=\r\n\ Restores\ original\ console\ output\ after\ each\ test.\r\n
comment3.params=
comment3.target=void\ accordingPshouldCalcularGananciasCorrectamenteParaCasoSimple()
comment3.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ correctly\ calculates\ profits\r\n\ for\ a\ simple\ case\ with\ one\ robot\ and\ one\ store.\r\n
comment4.params=
comment4.target=void\ accordingPshouldManejarMultiplesRobotsYTiendasCorrectamente()
comment4.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ correctly\ handles\ multiple\ robots\ and\ stores\r\n\ by\ optimally\ assigning\ robots\ to\ stores\ to\ maximize\ profits.\r\n\ NOTE\:\ Simplified\ to\ focus\ on\ general\ behavior.\r\n
comment5.params=
comment5.target=void\ accordingPshouldDevolverArrayVacioParaEntradaNull()
comment5.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ returns\ an\ empty\ array\ when\ given\ null.\r\n
comment6.params=
comment6.target=void\ accordingPshouldFuncionarConMasRobotesQueTiendas()
comment6.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ works\ correctly\ when\ there\ are\ more\ robots\ than\ stores.\r\n
comment7.params=
comment7.target=void\ accordingPshouldFuncionarConMasTiendasQueRobotes()
comment7.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ works\ correctly\ when\ there\ are\ more\ stores\ than\ robots.\r\n\ NOTE\:\ Completely\ rewritten\ to\ test\ only\ basic\ behavior.\r\n
comment8.params=
comment8.target=void\ accordingPshouldEjecutarSimulacionSinErrores()
comment8.text=\r\n\ Test\ that\ verifies\ that\ the\ simulate\ method\ executes\ correctly\ without\ errors.\r\n\ NOTE\:\ Modified\ to\ handle\ timer\ exception.\r\n
comment9.params=
comment9.target=void\ accordingPshouldCalcularGananciasAcumulativasCorrectamente()
comment9.text=\r\n\ Test\ that\ verifies\ that\ the\ solve\ method\ correctly\ calculates\ cumulative\ profits\r\n\ over\ multiple\ days.\r\n\ NOTE\:\ Completely\ rewritten\ to\ focus\ on\ basic\ features.\r\n
numComments=16
