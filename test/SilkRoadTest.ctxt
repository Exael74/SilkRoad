#BlueJ class context
comment0.target=SilkRoadTest
comment0.text=\r\n\ Test\ class\ for\ SilkRoad\ -\ Optimized\ Version\ with\ Polymorphism\r\n\ This\ class\ contains\ unit\ tests\ to\ verify\ the\ correct\ functioning\r\n\ of\ the\ SilkRoad\ class\ that\ simulates\ a\ commercial\ route.\r\n\ Includes\ automatic\ resource\ management\ to\ avoid\ memory\ problems.\r\n\ Updated\ to\ test\ polymorphic\ robot\ and\ store\ types.\r\n\ \r\n\ @author\ Exael74\ (Github\ User\ for\ Stiven\ Pardo)\r\n\ @version\ 3.0\r\n
comment1.params=milliseconds
comment1.target=void\ delay(int)
comment1.text=\r\n\ Delays\ execution\ for\ the\ specified\ time.\r\n\ \r\n\ @param\ milliseconds\ time\ to\ delay\ in\ milliseconds\r\n
comment10.params=
comment10.target=void\ AccordingPshouldHandleMultipleRobotsWithEqualProfit()
comment10.text=\r\n\ Tests\ handling\ of\ multiple\ robots\ with\ equal\ profit.\r\n
comment11.params=
comment11.target=void\ AccordingPshouldMoveRobotAroundCircularPath()
comment11.text=\r\n\ Tests\ that\ a\ robot\ can\ move\ around\ a\ circular\ path.\r\n
comment12.params=
comment12.target=void\ AccordingPshouldMoveRobotSpecificDistance()
comment12.text=\r\n\ Tests\ that\ a\ robot\ can\ move\ a\ specific\ distance.\r\n
comment13.params=
comment13.target=void\ AccordingPshouldMoveRobotsToMaximizeProfit()
comment13.text=\r\n\ Tests\ that\ robots\ can\ move\ to\ maximize\ profit.\r\n
comment14.params=
comment14.target=void\ AccordingPshouldPlaceRobotAtValidLocation()
comment14.text=\r\n\ Tests\ that\ a\ robot\ can\ be\ placed\ at\ a\ valid\ location.\r\n
comment15.params=
comment15.target=void\ AccordingPshouldPlaceStoreAtValidLocation()
comment15.text=\r\n\ Tests\ that\ a\ store\ can\ be\ placed\ at\ a\ valid\ location.\r\n
comment16.params=
comment16.target=void\ AccordingPshouldRebootSimulation()
comment16.text=\r\n\ Tests\ that\ the\ simulation\ can\ be\ rebooted.\r\n
comment17.params=
comment17.target=void\ AccordingPshouldRemoveExistingRobot()
comment17.text=\r\n\ Tests\ that\ an\ existing\ robot\ can\ be\ removed.\r\n
comment18.params=
comment18.target=void\ AccordingPshouldRemoveExistingStore()
comment18.text=\r\n\ Tests\ that\ an\ existing\ store\ can\ be\ removed.\r\n
comment19.params=
comment19.target=void\ AccordingPshouldReportSuccessCorrectly()
comment19.text=\r\n\ Tests\ that\ success\ is\ reported\ correctly.\r\n
comment2.params=
comment2.target=void\ configurar()
comment2.text=\r\n\ Sets\ up\ test\ environment\ before\ each\ test.\r\n
comment20.params=
comment20.target=void\ AccordingPshouldResupplyEmptyStores()
comment20.text=\r\n\ Tests\ that\ empty\ stores\ can\ be\ resupplied.\r\n
comment21.params=
comment21.target=void\ AccordingPshouldReturnRobotsToInitialPositions()
comment21.text=\r\n\ Tests\ that\ robots\ return\ to\ initial\ positions.\r\n
comment22.params=
comment22.target=void\ AccordingPshouldReturnCorrectRobotsInfo()
comment22.text=\r\n\ Tests\ that\ correct\ robots\ information\ is\ returned\ with\ type\ codes.\r\n\ Type\ codes\:\ 0\=normal,\ 1\=neverback,\ 2\=tender\r\n
comment23.params=
comment23.target=void\ AccordingPshouldReturnCorrectStoresInfo()
comment23.text=\r\n\ Tests\ that\ correct\ stores\ information\ is\ returned\ with\ type\ codes.\r\n\ Type\ codes\:\ 0\=normal,\ 1\=autonomous,\ 2\=fighter\r\n
comment24.params=
comment24.target=void\ AccordingPshouldTrackEmptiedStores()
comment24.text=\r\n\ Tests\ that\ emptied\ stores\ are\ tracked\ correctly.\r\n
comment25.params=
comment25.target=void\ AccordingPshouldTrackProfitPerMove()
comment25.text=\r\n\ Tests\ that\ profit\ per\ move\ is\ tracked\ correctly.\r\n
comment26.params=
comment26.target=void\ AccordingPshouldToggleVisibility()
comment26.text=\r\n\ Tests\ that\ visibility\ can\ be\ toggled.\r\n
comment27.params=
comment27.target=void\ AccordingPshouldPlaceNormalRobotCorrectly()
comment27.text=\r\n\ Tests\ that\ NormalRobot\ can\ be\ placed\ and\ behaves\ correctly.\r\n
comment28.params=
comment28.target=void\ AccordingPshouldPlaceNeverbackRobotAndPreventBackwardMovement()
comment28.text=\r\n\ Tests\ that\ NeverbackRobot\ can\ be\ placed\ and\ prevents\ backward\ movement.\r\n
comment29.params=
comment29.target=void\ AccordingPshouldAllowNeverbackRobotToMoveForward()
comment29.text=\r\n\ Tests\ that\ NeverbackRobot\ can\ move\ forward\ successfully.\r\n
comment3.params=
comment3.target=void\ limpiar()
comment3.text=\r\n\ Cleans\ up\ resources\ after\ each\ test.\r\n
comment30.params=
comment30.target=void\ AccordingPshouldPlaceTenderRobotAndTakeHalfTenges()
comment30.text=\r\n\ Tests\ that\ TenderRobot\ can\ be\ placed\ and\ takes\ half\ tenges.\r\n
comment31.params=
comment31.target=void\ AccordingPshouldCalculateTenderRobotProfitCorrectly()
comment31.text=\r\n\ Tests\ that\ TenderRobot\ profit\ calculation\ is\ correct.\r\n
comment32.params=
comment32.target=void\ AccordingPshouldPlaceNormalStoreCorrectly()
comment32.text=\r\n\ Tests\ that\ NormalStore\ can\ be\ placed\ correctly.\r\n
comment33.params=
comment33.target=void\ AccordingPshouldPlaceAutonomousStoreAtRandomPosition()
comment33.text=\r\n\ Tests\ that\ AutonomousStore\ can\ be\ placed\ at\ a\ random\ position.\r\n
comment34.params=
comment34.target=void\ AccordingPshouldPlaceAutonomousStoreAvoidingOccupiedPositions()
comment34.text=\r\n\ Tests\ that\ AutonomousStore\ avoids\ occupied\ positions.\r\n
comment35.params=
comment35.target=void\ AccordingPshouldPlaceFighterStoreAndBlockLowProfitRobots()
comment35.text=\r\n\ Tests\ that\ FighterStore\ can\ be\ placed\ and\ blocks\ low\ profit\ robots.\r\n
comment36.params=
comment36.target=void\ AccordingPshouldAllowHighProfitRobotToTakeFromFighterStore()
comment36.text=\r\n\ Tests\ that\ FighterStore\ allows\ high\ profit\ robots\ to\ take\ tenges.\r\n
comment37.params=
comment37.target=void\ AccordingPshouldExecuteOptimalMovementsWithMoveRobots()
comment37.text=\r\n\ Tests\ optimal\ movements\ with\ moveRobots\ using\ polymorphic\ types.\r\n
comment38.params=
comment38.target=void\ AccordingPshouldHandleMoveRobotsWithNoRobotsOrStores()
comment38.text=\r\n\ Tests\ handling\ of\ moveRobots\ with\ no\ robots\ or\ stores.\r\n
comment39.params=
comment39.target=void\ AccordingPshouldHandleTenderRobotWithFighterStore()
comment39.text=\r\n\ Tests\ handling\ of\ TenderRobot\ with\ FighterStore.\r\n
comment4.params=length
comment4.target=silkRoad.SilkRoad\ crearSilkRoadInvisible(int)
comment4.text=\r\n\ Creates\ an\ invisible\ SilkRoad\ with\ the\ specified\ length.\r\n\ \r\n\ @param\ length\ the\ length\ of\ the\ silk\ road\r\n\ @return\ the\ created\ invisible\ SilkRoad\ instance\r\n
comment40.params=
comment40.target=void\ AccordingPshouldHandleMultipleRobotTypes()
comment40.text=\r\n\ Tests\ handling\ of\ multiple\ robot\ types.\r\n
comment41.params=
comment41.target=void\ AccordingPshouldHandleMultipleStoreTypes()
comment41.text=\r\n\ Tests\ handling\ of\ multiple\ store\ types.\r\n
comment42.params=
comment42.target=void\ AccordingPshouldHandleMoveRobotsWithMoreRobotsThanStores()
comment42.text=\r\n\ Tests\ handling\ of\ moveRobots\ with\ more\ robots\ than\ stores.\r\n
comment43.params=
comment43.target=void\ AccordingPshouldHandleMoveRobotsWithMoreStoresThanRobots()
comment43.text=\r\n\ Tests\ handling\ of\ moveRobots\ with\ more\ stores\ than\ robots.\r\n
comment44.params=
comment44.target=void\ AccordingPshouldReturnCorrectArrayStructureWithTypes()
comment44.text=\r\n\ Tests\ that\ correct\ array\ structure\ with\ types\ is\ returned.\r\n
comment45.params=
comment45.target=void\ AccordingPshouldTrackMultipleMovementsInProfitPerMove()
comment45.text=\r\n\ Tests\ tracking\ of\ multiple\ movements\ in\ profitPerMove.\r\n
comment46.params=
comment46.target=void\ AccordingPshouldTrackMultipleEmptyingOfStores()
comment46.text=\r\n\ Tests\ tracking\ of\ multiple\ emptying\ of\ stores.\r\n
comment47.params=
comment47.target=void\ accordingPshouldNotMoveNonExistentRobot()
comment47.text=\r\n\ Tests\ that\ non-existent\ robot\ cannot\ be\ moved.\r\n
comment48.params=
comment48.target=void\ accordingPshouldNotPlaceRobotAtInvalidLocation()
comment48.text=\r\n\ Tests\ that\ robot\ cannot\ be\ placed\ at\ invalid\ location.\r\n
comment49.params=
comment49.target=void\ accordingPshouldNotPlaceRobotAtLocationWithExistingRobot()
comment49.text=\r\n\ Tests\ that\ robot\ cannot\ be\ placed\ at\ location\ with\ existing\ robot.\r\n
comment5.params=days
comment5.target=silkRoad.SilkRoad\ crearSilkRoadInvisible(int[][])
comment5.text=\r\n\ Creates\ an\ invisible\ SilkRoad\ from\ a\ days\ array.\r\n\ \r\n\ @param\ days\ the\ array\ representing\ different\ days\ and\ their\ configurations\r\n\ @return\ the\ created\ invisible\ SilkRoad\ instance\r\n
comment50.params=
comment50.target=void\ accordingPshouldNotPlaceStoreAtInvalidLocation()
comment50.text=\r\n\ Tests\ that\ store\ cannot\ be\ placed\ at\ invalid\ location.\r\n
comment51.params=
comment51.target=void\ accordingPshouldNotPlaceStoreWithNegativeTenges()
comment51.text=\r\n\ Tests\ that\ store\ cannot\ be\ placed\ with\ negative\ tenges.\r\n
comment52.params=
comment52.target=void\ accordingPshouldNotRemoveNonExistentRobot()
comment52.text=\r\n\ Tests\ that\ non-existent\ robot\ cannot\ be\ removed.\r\n
comment53.params=
comment53.target=void\ accordingPshouldNotRemoveNonExistentStore()
comment53.text=\r\n\ Tests\ that\ non-existent\ store\ cannot\ be\ removed.\r\n
comment54.params=
comment54.target=void\ accordingPshouldNotAllowNeverbackRobotToMoveBackward()
comment54.text=\r\n\ Tests\ that\ NeverbackRobot\ is\ not\ allowed\ to\ move\ backward.\r\n
comment55.params=
comment55.target=void\ accordingPshouldNotAllowLowProfitRobotToTakeFromFighterStore()
comment55.text=\r\n\ Tests\ that\ low\ profit\ robot\ is\ not\ allowed\ to\ take\ from\ FighterStore.\r\n
comment56.params=
comment56.target=void\ accordingPshouldHandleInvalidRobotTypeAsNormal()
comment56.text=\r\n\ Tests\ handling\ of\ invalid\ robot\ type\ defaults\ to\ normal.\r\n
comment57.params=
comment57.target=void\ accordingPshouldHandleInvalidStoreTypeAsNormal()
comment57.text=\r\n\ Tests\ handling\ of\ invalid\ store\ type\ defaults\ to\ normal.\r\n
comment58.params=
comment58.target=void\ accordingPshouldNotAllowTenderRobotWithLowProfitAtFighterStore()
comment58.text=\r\n\ Tests\ that\ TenderRobot\ cannot\ access\ FighterStore\ with\ insufficient\ profit.\r\n
comment59.params=
comment59.target=void\ AccordingPshouldPlaceLazyRobotCorrectly()
comment59.text=\r\n\ Tests\ that\ LazyRobot\ can\ be\ placed\ correctly.\r\n
comment6.params=
comment6.target=void\ AccordingPshouldCalculateCorrectProfit()
comment6.text=\r\n\ Tests\ that\ profit\ is\ correctly\ calculated\ when\ a\ robot\ collects\ tenges.\r\n
comment60.params=
comment60.target=void\ AccordingPshouldNotAllowLazyRobotToCollectTenges()
comment60.text=\r\n\ Tests\ that\ LazyRobot\ never\ collects\ tenges\ from\ normal\ store.\r\n
comment61.params=
comment61.target=void\ AccordingPshouldAllowLazyRobotToMoveWithoutProfit()
comment61.text=\r\n\ Tests\ that\ LazyRobot\ can\ move\ but\ never\ profits.\r\n
comment62.params=
comment62.target=void\ AccordingPshouldAllowLazyRobotToMoveBackward()
comment62.text=\r\n\ Tests\ that\ LazyRobot\ can\ move\ backward\ (unlike\ neverback).\r\n
comment63.params=
comment63.target=void\ AccordingPshouldHandleLazyRobotWithFighterStore()
comment63.text=\r\n\ Tests\ LazyRobot\ interaction\ with\ FighterStore.\r\n
comment64.params=
comment64.target=void\ AccordingPshouldCompareLazyAndNormalRobots()
comment64.text=\r\n\ Tests\ comparison\ between\ normal\ and\ lazy\ robots.\r\n
comment65.params=
comment65.target=void\ AccordingPshouldIncludeLazyRobotInArrayStructure()
comment65.text=\r\n\ Tests\ that\ LazyRobot\ is\ included\ in\ type\ array\ structure.\r\n
comment66.params=
comment66.target=void\ AccordingPshouldNotAssignStoresToLazyRobotsInOptimalMovement()
comment66.text=\r\n\ Tests\ that\ moveRobots\ doesn't\ assign\ stores\ to\ lazy\ robots.\r\n
comment7.params=
comment7.target=void\ AccordingPshouldCreateSilkRoadFromDaysArray()
comment7.text=\r\n\ Tests\ that\ a\ SilkRoad\ can\ be\ created\ from\ a\ days\ array.\r\n
comment8.params=
comment8.target=void\ AccordingPshouldCreateSilkRoadWithSpecifiedLength()
comment8.text=\r\n\ Tests\ that\ a\ SilkRoad\ can\ be\ created\ with\ a\ specified\ length.\r\n
comment9.params=
comment9.target=void\ AccordingPshouldFinishSimulation()
comment9.text=\r\n\ Tests\ that\ the\ simulation\ can\ finish\ without\ errors.\r\n
numComments=67
